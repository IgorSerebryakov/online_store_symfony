services:
  php-fpm:
    build: docker
    container_name: 'online_store_php'
    ports:
      - '9000:9000'
    volumes:
      - ./:/app
    working_dir: /app
    networks:
      - online_store

  nginx:
    image: nginx
    container_name: 'online_store_nginx'
    working_dir: /app
    ports:
      - '8888:80'
    volumes:
      - ./:/app
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - online_store

  postgres:
    image: postgres:15
    ports:
      - 15432:5432
    container_name: 'online_store_db'
    working_dir: /app
    restart: always
    environment:
      POSTGRES_DB: 'online_store'
      POSTGRES_USER: 'dbuser'
      POSTGRES_PASSWORD: 'dbpwd'
    volumes:
      - dump:/app/dump
      - postgresql:/var/lib/postgresql/data
    networks:
      - online_store

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

networks:
  online_store:
    driver: bridge

volumes:
  dump:
  postgresql:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
